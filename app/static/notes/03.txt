元组的详解及使用

元组 tuple
  元组是不可变的序列，同list一样，元组可以存放任意类型数据的容器

元组的表示方法:
  用小括号() 括起来，单个元素括起来后加逗号(,)区分单个对象还是元组

创建空元组的字面值:
   t = ()   空元组

创建非空元组的字面值表示:
  t = 200,
  t = (20,)
  t = (1, 2, 3)
  t = 100, 200, 300

函数type(x) 用来返回x对应的类型


元组的构造(创建)函数tuple
  tuple()   生成一个空元组，等同于()
  tuple(iterable)  用可迭代对象生成一个元组

  示例：
    t = tuple()   # 等同于 t = ()
    t = tuple(range(1, 10, 3))  # t = (1, 4, 7)
    t = tuple("ABC")  # t = ('A', 'B', 'C')

元组的运算:
  + += * *=
  < <= > >= == !=
  in , not in
  索引[],切片[:]/[::]

+ 加号用于拼接元组
* 用于生成重复的元组

元组的比较运算:
  规则与列表的比较规则完全相同

in / not in 运算符
  规则与列表的规则完全相同

索引和切片
  索引取值和切片取值的规则与列表完全相同
  元组不支持索引赋值和切片赋值(因为元组不可被改变)

元组的方法:
  T.index(v[, begin[, end]]) 返回对应元素的索引下标
  T.count(x)  返回元组中对应的元素个数
  详见:
    >>> help(tuple)

序列相关的函数:
  len(x), max(x), min(x), sum(x), any(x), all(x)

构造函数:
  str(x)  创建字符串
  list(iterable) 创建列表
  tuple(iterable) 创建元组

序列相关的函数:
  reversed(可迭代对象)  返回反向顺序的可迭代对象
  sorted(iterable, key=None, reverse=False) 返回已排序的列表